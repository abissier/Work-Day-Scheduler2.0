{"version":3,"sources":["components/Note/index.js","components/Wrapper/index.js","components/Title/index.js","components/Hour/index.js","App.js","index.js"],"names":["Notes","state","note","id","hour","Date","getHours","appClass","handleInputChange","event","value","target","noteId","setState","handleFormSubmit","preventDefault","noteItem","localStorage","setItem","i","displayTodo","getItem","this","props","className","aria-label","onChange","type","onClick","time","Component","Wrapper","children","Title","Hour","useState","setTime","useEffect","timer","setInterval","clearInterval","toLocaleDateString","toLocaleTimeString","App","map","t","Note","ReactDOM","render","document","getElementById"],"mappings":"mmBAgFeA,E,4MA5EdC,MAAQ,CACPC,KAAM,GACNC,GAAI,GACJC,MAAM,IAAIC,MAAOC,WACjBC,SAAU,I,EA8BXC,kBAAoB,SAACC,GACpB,IAAIC,EAAQD,EAAME,OAAOD,MACrBE,EAASH,EAAME,OAAOR,GAE1B,EAAKU,SAAS,CACbX,KAAMQ,EACNP,GAAIS,K,EAKNE,iBAAmB,SAACL,GACnBA,EAAMM,iBAEN,IAAIH,EAAS,EAAKX,MAAME,GACpBa,EAAW,EAAKf,MAAMC,KAE1Be,aAAaC,QAAQN,EAAQI,I,uDA3C9B,WACC,IAAK,IAAIG,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC5B,IAAIC,EAAcH,aAAaI,QAAQF,GACnCC,GAAeE,KAAKC,MAAMpB,KAAOgB,GACpCG,KAAKT,SAAS,CACbX,KAAMkB,EACNjB,GAAIgB,IAGFG,KAAKrB,MAAMG,KAAOkB,KAAKC,MAAMpB,GAChCmB,KAAKT,SAAS,CACbN,SAAU,2BAEDe,KAAKrB,MAAMG,KAAOkB,KAAKC,MAAMpB,GACvCmB,KAAKT,SAAS,CACbN,SAAU,4BAGXe,KAAKT,SAAS,CACbN,SAAU,gC,oBA4Bd,WACC,OACC,qBAAKiB,UAAU,MAAf,SACC,sBAAKA,UAAU,mBAAf,UACC,uBAAMA,UAAWF,KAAKrB,MAAMM,SAA5B,UAAuCe,KAAKC,MAAMpB,GAAlD,SACA,0BACCqB,UAAU,eACVd,MAAOY,KAAKrB,MAAMC,KAClBC,GAAImB,KAAKC,MAAMpB,GACfsB,aAAW,gBACXC,SAAUJ,KAAKd,oBAEhB,wBAAQmB,KAAK,SAASH,UAAU,kBAAkBI,QAASN,KAAKR,iBAAhE,sBAVwBQ,KAAKC,MAAMM,U,GA1DpBC,a,MCILC,MAJf,SAAiBR,GAChB,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMS,Y,MCGzBC,MAJf,SAAeV,GACd,OAAO,oBAAIC,UAAU,QAAd,SAAuBD,EAAMS,Y,aCoBtBE,MArBf,WAAiB,IAAD,EACWC,mBAAS,IAAI9B,MADxB,mBACPwB,EADO,KACDO,EADC,KAYf,OATAC,qBAAU,WACT,IAAMC,EAAQC,aAAY,WACzBH,EAAQ,IAAI/B,QACV,KACH,OAAO,WACNmC,cAAcF,MAEb,IAGF,8BACC,sBAAKd,UAAU,OAAf,UACEK,EAAKY,qBADP,IAC8BZ,EAAKa,qBAAsB,U,OCD7CC,MAVf,WACC,OACC,eAAC,EAAD,WACC,cAAC,EAAD,iCACA,cAAC,EAAD,IACCd,EAAKe,KAAI,SAACC,GAAD,OAAO,cAACC,EAAD,CAAM3C,GAAI0C,EAAE1C,GAAI0B,KAAMgB,EAAEhB,KAAM3B,KAAM2C,EAAE3C,c,MCP1D6C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fc104c79.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass Notes extends Component {\r\n\tstate = {\r\n\t\tnote: '',\r\n\t\tid: '',\r\n\t\thour: new Date().getHours(),\r\n\t\tappClass: ''\r\n\t};\r\n\r\n\t// display saved notes from local storage\r\n\tcomponentDidMount() {\r\n\t\tfor (var i = 8; i < 17; i++) {\r\n\t\t\tvar displayTodo = localStorage.getItem(i);\r\n\t\t\tif (displayTodo && this.props.id === i) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tnote: displayTodo,\r\n\t\t\t\t\tid: i\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.state.hour < this.props.id) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tappClass: 'input-group-text later'\r\n\t\t\t\t});\r\n\t\t\t} else if (this.state.hour > this.props.id) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tappClass: 'input-group-text before'\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tappClass: 'input-group-text current'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// update note state when value changes\r\n\thandleInputChange = (event) => {\r\n\t\tlet value = event.target.value;\r\n\t\tlet noteId = event.target.id;\r\n\r\n\t\tthis.setState({\r\n\t\t\tnote: value,\r\n\t\t\tid: noteId\r\n\t\t});\r\n\t};\r\n\r\n\t// save note to local storage when save button clicked\r\n\thandleFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tvar noteId = this.state.id;\r\n\t\tvar noteItem = this.state.note;\r\n\r\n\t\tlocalStorage.setItem(noteId, noteItem);\r\n\t};\r\n\r\n\t// return note card for each hour\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"row\" key={this.props.time}>\r\n\t\t\t\t<div className=\"input-group note\">\r\n\t\t\t\t\t<span className={this.state.appClass}>{this.props.id}:00</span>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={this.state.note}\r\n\t\t\t\t\t\tid={this.props.id}\r\n\t\t\t\t\t\taria-label=\"With textarea\"\r\n\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={this.handleFormSubmit}>\r\n\t\t\t\t\t\tsave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Wrapper(props) {\r\n\treturn <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Title(props) {\r\n\treturn <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style.css';\r\n\r\nfunction Hour() {\r\n\tconst [ time, setTime ] = useState(new Date());\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetTime(new Date());\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"hour\">\r\n\t\t\t\t{time.toLocaleDateString()},{time.toLocaleTimeString()}{' '}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Hour;\r\n","import React from 'react';\nimport Note from './components/Note';\nimport Wrapper from './components/Wrapper';\nimport Title from './components/Title';\nimport Hour from './components/Hour';\nimport time from './time.json';\n\nfunction App() {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Title>Work Day Scheduler</Title>\n\t\t\t<Hour />\n\t\t\t{time.map((t) => <Note id={t.id} time={t.time} note={t.note} />)}\n\t\t</Wrapper>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}